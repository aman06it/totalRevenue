{"version":3,"sources":["App.js","index.js"],"names":["formatNumber","number","Intl","NumberFormat","minimumFractionDigits","format","App","props","totalRevenue","data","price","i","length","sold","unitPrice","parseData","a","id","res","Object","keys","forEach","key","push","sort","b","name","setState","newData","getData","requests","map","url","fetch","Promise","all","then","responses","response","json","products","searchProduct","text","searchVal","trim","state","exactMatch","caseSen","filter","item","toLowerCase","includes","extarOption","e","element","document","getElementById","target","classList","toggle","this","className","style","position","onClick","type","value","onChange","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.c018de5b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nconst formatNumber = (number) => new Intl.NumberFormat(\"en\", { minimumFractionDigits: 2 }).format(number);\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: [],\n      newData: [],\n      searchVal: '',\n      caseSen: false,\n      exactMatch: false,\n    }\n  }\n  componentDidMount() {\n    this.getData()\n  }\n  totalRevenue = (data) => {\n    let price = 0;\n    for (let i = 0; i < data.length; i++) {\n      price += (data[i].sold * data[i].unitPrice)\n    }\n    return price\n  }\n  parseData = (data) => {\n    let a = {}\n    for (let i = 0; i < data.length; i++) {\n      if (!a[data[i].id]) {\n        a[data[i].id] = data[i]\n      } else {\n        a[data[i].id].sold = a[data[i].id].sold + data[i].sold\n      }\n    }\n    let res = []\n    Object.keys(a).forEach(key => {\n      res.push(a[key])\n    })\n    res.sort((a, b) => {\n      return a.name > b.name ? 1 : a.name < b.name ? -1 : 0\n    })\n    this.setState({ data: res, newData: res })\n  }\n\n  getData = () => {\n    let urls = [\n      'api/branch1.json',\n      'api/branch2.json',\n      'api/branch3.json'\n    ];\n\n    // map every url to the promise of the fetch\n    let requests = urls.map(url => fetch(url));\n    let res = []\n    // Promise.all waits until all jobs are resolved\n    Promise.all(requests)\n      .then((responses) => responses.forEach(\n        async response => {\n          response = await response.json()\n          res = [...res, ...response.products]\n          this.parseData(res);\n        }\n      ));\n  }\n  searchProduct = (text) => {\n    this.setState({ searchVal: text })\n    if (text.trim().length === 0)\n      {\n        // this.setState({newData:this.state.data})\n        return\n      }\n    let newData=''\n    if (this.state.exactMatch && this.state.caseSen) {\n      newData = this.state.data.filter((item) => {\n        return item.name===text\n      })\n    }else if(this.state.exactMatch){\n      newData = this.state.data.filter((item) => {\n        return item.name.toLowerCase()===(text.toLowerCase()) || item.name===text\n      })\n    }else if(this.state.caseSen){\n      newData = this.state.data.filter((item) => {\n        return item.name.includes(text)\n      })\n    }else{\n      newData = this.state.data.filter((item) => {\n        return item.name.toLowerCase().includes(text.toLowerCase())\n      })\n    }\n    this.setState({ newData })\n  }\n  extarOption = (e) => {\n    var element = document.getElementById(e.target.id);\n    if (element.id === 'caseSen') {\n      element.classList.toggle(\"caseSen\");\n      this.setState({ caseSen: !this.state.caseSen },()=>this.searchProduct(this.state.searchVal))\n    } else {\n      element.classList.toggle(\"exactMatch\");\n      this.setState({ exactMatch: !this.state.exactMatch },()=>this.searchProduct(this.state.searchVal))\n    }\n  }\n  render() {\n    return (\n      <div className=\"product-list\">\n        <div className=\"middle\">\n          <div style={{ position: 'relative' }}>\n            <label>Search Products</label>\n            <div className=\"extra\">\n              <label id=\"caseSen\" onClick={e => this.extarOption(e)}>Aa</label>\n              <label id='exactMat' onClick={e => this.extarOption(e)}>Ab</label>\n            </div>\n          </div>\n          <input type=\"text\" value={this.state.searchVal} onChange={e => this.searchProduct(e.target.value)} />\n        </div>\n        <table>\n          <thead>\n            <tr>\n              <th>Product</th>\n              <th>Revenue</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.newData.length > 0 && this.state.newData.map((item) => {\n              return <tr key={item.id}>\n                <td>{item.name}</td>\n                <td>{formatNumber(item.sold * item.unitPrice)}</td>\n              </tr>\n            })}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td>Total</td>\n              <td>{formatNumber(this.totalRevenue(this.state.newData))}</td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}